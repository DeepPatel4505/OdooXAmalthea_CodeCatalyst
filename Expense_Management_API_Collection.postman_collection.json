{
  "info": {
    "name": "Expense Management System API",
    "description": "Complete API testing collection for Expense Management System",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "managerToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "employeeToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "companyId",
      "value": "",
      "type": "string"
    },
    {
      "key": "managerId",
      "value": "",
      "type": "string"
    },
    {
      "key": "employeeId",
      "value": "",
      "type": "string"
    },
    {
      "key": "expenseId",
      "value": "",
      "type": "string"
    },
    {
      "key": "approvalRuleId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Authentication",
      "item": [
        {
          "name": "1.1 Admin Signup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@testcompany.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Admin\",\n  \"lastName\": \"User\",\n  \"company\": \"Test Company\",\n  \"country\": \"US\",\n  \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "signup"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('adminToken', response.data.token);",
                  "    pm.collectionVariables.set('adminId', response.data.user.id);",
                  "    pm.collectionVariables.set('companyId', response.data.user.company.id);",
                  "    console.log('Admin token saved:', response.data.token);",
                  "    console.log('Admin ID saved:', response.data.user.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "1.2 Admin Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@testcompany.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('adminToken', response.data.token);",
                  "    pm.collectionVariables.set('adminId', response.data.user.id);",
                  "    pm.collectionVariables.set('companyId', response.data.user.company.id);",
                  "    console.log('Admin token updated:', response.data.token);",
                  "    console.log('Admin ID updated:', response.data.user.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "1.3 Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('adminId', response.data.user.id);",
                  "    pm.collectionVariables.set('companyId', response.data.user.company.id);",
                  "    console.log('Admin ID saved:', response.data.user.id);",
                  "    console.log('Company ID saved:', response.data.user.company.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "1.4 Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@testcompany.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "forgot-password"]
            }
          }
        }
      ]
    },
    {
      "name": "2. User Management",
      "item": [
        {
          "name": "2.1 Create Manager",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"manager@testcompany.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Manager\",\n  \"role\": \"manager\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('managerId', response.data.user.id);",
                  "    console.log('Manager ID saved:', response.data.user.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "2.2 Create Employee",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"employee@testcompany.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Employee\",\n  \"role\": \"employee\",\n  \"managerId\": \"{{managerId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('employeeId', response.data.user.id);",
                  "    console.log('Employee ID saved:', response.data.user.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "2.3 Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "2.4 Get Managers List",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/managers/list",
              "host": ["{{baseUrl}}"],
              "path": ["users", "managers", "list"]
            }
          }
        },
        {
          "name": "2.5 Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Manager Updated\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{managerId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{managerId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "3. Approval Rules",
      "item": [
        {
          "name": "3.1 Create Sequential Rule",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Standard Approval Flow\",\n  \"isManagerApprover\": true,\n  \"approvalType\": \"SEQUENTIAL\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/approval-rules",
              "host": ["{{baseUrl}}"],
              "path": ["approval-rules"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('approvalRuleId', response.data.rule.id);",
                  "    console.log('Approval Rule ID saved:', response.data.rule.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "3.2 Add Approval Step 1",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stepNumber\": 1,\n  \"approverRole\": \"Manager\",\n  \"approverId\": \"{{managerId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/approval-rules/{{approvalRuleId}}/steps",
              "host": ["{{baseUrl}}"],
              "path": ["approval-rules", "{{approvalRuleId}}", "steps"]
            }
          }
        },
        {
          "name": "3.3 Add Approval Step 2",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stepNumber\": 2,\n  \"approverRole\": \"Finance\",\n  \"approverId\": \"{{adminId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/approval-rules/{{approvalRuleId}}/steps",
              "host": ["{{baseUrl}}"],
              "path": ["approval-rules", "{{approvalRuleId}}", "steps"]
            }
          }
        },
        {
          "name": "3.4 Get Approval Rules",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/approval-rules",
              "host": ["{{baseUrl}}"],
              "path": ["approval-rules"]
            }
          }
        },
        {
          "name": "3.5 Create Percentage Rule",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Percentage Approval\",\n  \"isManagerApprover\": false,\n  \"approvalType\": \"PERCENTAGE\",\n  \"percentageThreshold\": 60\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/approval-rules",
              "host": ["{{baseUrl}}"],
              "path": ["approval-rules"]
            }
          }
        }
      ]
    },
    {
      "name": "4. Currency & OCR",
      "item": [
        {
          "name": "4.1 Get Countries",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/currency/countries",
              "host": ["{{baseUrl}}"],
              "path": ["currency", "countries"]
            }
          }
        },
        {
          "name": "4.2 Get Supported Currencies",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/currency/supported",
              "host": ["{{baseUrl}}"],
              "path": ["currency", "supported"]
            }
          }
        },
        {
          "name": "4.3 Convert Currency",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 100,\n  \"from\": \"USD\",\n  \"to\": \"EUR\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/currency/convert",
              "host": ["{{baseUrl}}"],
              "path": ["currency", "convert"]
            }
          }
        },
        {
          "name": "4.4 Get Exchange Rates",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/currency/rates?base=USD&symbols=EUR,GBP,JPY",
              "host": ["{{baseUrl}}"],
              "path": ["currency", "rates"],
              "query": [
                {
                  "key": "base",
                  "value": "USD"
                },
                {
                  "key": "symbols",
                  "value": "EUR,GBP,JPY"
                }
              ]
            }
          }
        },
        {
          "name": "4.5 Get Supported File Types",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/ocr/supported-types",
              "host": ["{{baseUrl}}"],
              "path": ["ocr", "supported-types"]
            }
          }
        }
      ]
    },
    {
      "name": "5. Expense Management",
      "item": [
        {
          "name": "5.1 Employee Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"employee@testcompany.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('employeeToken', response.data.token);",
                  "    console.log('Employee token saved:', response.data.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "5.2 Create Expense (USD)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{employeeToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 125.50,\n  \"currency\": \"USD\",\n  \"category\": \"Meals & Entertainment\",\n  \"description\": \"Client dinner at Restaurant ABC\",\n  \"expenseDate\": \"2024-01-15T00:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/expenses",
              "host": ["{{baseUrl}}"],
              "path": ["expenses"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('expenseId', response.data.expense.id);",
                  "    console.log('Expense ID saved:', response.data.expense.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "5.3 Create Multi-Currency Expense",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{employeeToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 100,\n  \"currency\": \"EUR\",\n  \"category\": \"Travel\",\n  \"description\": \"Hotel accommodation in Paris\",\n  \"expenseDate\": \"2024-01-16T00:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/expenses",
              "host": ["{{baseUrl}}"],
              "path": ["expenses"]
            }
          }
        },
        {
          "name": "5.4 Get Employee Expenses",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/expenses",
              "host": ["{{baseUrl}}"],
              "path": ["expenses"]
            }
          }
        },
        {
          "name": "5.5 Get Expense Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/expenses/{{expenseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["expenses", "{{expenseId}}"]
            }
          }
        },
        {
          "name": "5.6 Get Expense Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/expenses/stats/summary?period=30",
              "host": ["{{baseUrl}}"],
              "path": ["expenses", "stats", "summary"],
              "query": [
                {
                  "key": "period",
                  "value": "30"
                }
              ]
            }
          }
        },
        {
          "name": "5.7 Update Expense",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{employeeToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated: Client dinner at Restaurant ABC\",\n  \"amount\": 135.50\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/expenses/{{expenseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["expenses", "{{expenseId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "6. Approval Workflow",
      "item": [
        {
          "name": "6.1 Manager Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"manager@testcompany.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('managerToken', response.data.token);",
                  "    console.log('Manager token saved:', response.data.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "6.2 Get Pending Approvals",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{managerToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/approvals/pending",
              "host": ["{{baseUrl}}"],
              "path": ["approvals", "pending"]
            }
          }
        },
        {
          "name": "6.3 Approve Expense",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{managerToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"approved\",\n  \"comments\": \"Approved - valid business expense\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/approvals/{{expenseId}}/decision",
              "host": ["{{baseUrl}}"],
              "path": ["approvals", "{{expenseId}}", "decision"]
            }
          }
        },
        {
          "name": "6.4 Get Approval History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{managerToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/approvals/{{expenseId}}/history",
              "host": ["{{baseUrl}}"],
              "path": ["approvals", "{{expenseId}}", "history"]
            }
          }
        },
        {
          "name": "6.5 Reject Expense (Test)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{managerToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"rejected\",\n  \"comments\": \"Rejected - insufficient documentation\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/approvals/{{expenseId}}/decision",
              "host": ["{{baseUrl}}"],
              "path": ["approvals", "{{expenseId}}", "decision"]
            }
          }
        }
      ]
    },
    {
      "name": "7. Admin Override",
      "item": [
        {
          "name": "7.1 Get All Expenses (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/expenses",
              "host": ["{{baseUrl}}"],
              "path": ["expenses"]
            }
          }
        },
        {
          "name": "7.2 Admin Override Approval",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"approved\",\n  \"comments\": \"Admin override approval\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/approvals/{{expenseId}}/decision",
              "host": ["{{baseUrl}}"],
              "path": ["approvals", "{{expenseId}}", "decision"]
            }
          }
        },
        {
          "name": "7.3 Delete User (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{employeeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{employeeId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "8. Error Testing",
      "item": [
        {
          "name": "8.1 Invalid Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid@test.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "8.2 Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid_token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "8.3 Invalid Expense Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{employeeToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": -100,\n  \"currency\": \"INVALID\",\n  \"category\": \"\",\n  \"description\": \"\",\n  \"expenseDate\": \"invalid-date\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/expenses",
              "host": ["{{baseUrl}}"],
              "path": ["expenses"]
            }
          }
        }
      ]
    }
  ]
}
